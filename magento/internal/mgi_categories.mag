<?php
// ==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--
// Categories Magento Class  [V.0.0.2]  (2017-05-16)
// Brqx Group - Agile Farmacia Zaragoza Methodology
// Spc - Cica_d05 - Home - Index_06 - v0_0_1
//-------------------------------------------------------------------------------------
// Manage Magento object - Abstraction for Magento version - - Internal - Multiple items
//-------------------------------------------------------------------------------------
// ==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--
//-------------------------------------------------------------------------------------
// - create_parent		: Create a parent ( Level 0 category )
// - delete_parent		: Delete a parent ( Level 0 category and it's childs)
// - getCategoryIdbyName : Get category Id by Name (Level 0 category)
// - getCategoryIdbySku  : Get category Id by category SKU
// - getCategoryNamebySku : Get category Name by category SKU
// - deleteCategorybySku : Delete category by SKU
// - create_child : Create child category by parent sku and child category name
// - deleteallcategories_noproduct : Delete all categories which not have product
// - deleteallcategories : Delete all categories
// - getTreeCategories : Get all categories with ul li structure
// - get_children : get childerns categories by parent category name

//-------------------------------------------------------------------------------------

class mgi_categories extends mg_print	
{
	public		$n 			=	'mgi_categories::'			;
    //create_parent('RED');
	public function create_parent($cname){
		$parentId=2;
		$storeId=1;
		$checkcat = Mage::getModel('catalog/category')->getCollection()
					->addFieldToFilter('name', $cname)
					->addAttributeToFilter('parent_id',array('eq' => $parentId));
		if(count($checkcat)>=1){
			echo $cname.' category name already exists';
			return 0;
		}
		$pcat = Mage::getModel('catalog/category')->getCollection()->addAttributeToSelect('category_sku')
					->addAttributeToFilter('parent_id',array('eq' => $parentId));
		$pcount=$pcat->getLastItem()->getCategorySku();
		$category = Mage::getModel('catalog/category');
		$category->setName($cname);
		$category->setIsActive(1);
		$category->setDisplayMode('PRODUCTS');
		$category->setIsAnchor(1); //for active anchor
		//$category->setCategorySku($psku);//add sku
		$category->setStoreId($storeId);
		$parentCategory = Mage::getModel('catalog/category')->load($parentId);
		$category->setPath($parentCategory->getPath());
		$category->save();
		$this->addskutocategory($pcount,$category->getId(),$storeId);
	}
    //addskutocategory function use create SKU;
	//addskutocategory('P-01-37',38,1) //param1 for previous category id,params2 current category id
	protected function addskutocategory($pcount,$categoryId,$storeId){
		$categorysku = Mage::getModel('catalog/category')->setStoreId($storeId)->load($categoryId);
		$pcc=explode('-',$pcount);
		$pc=$pcc[1]+1;
		if($pcount==''){
		 $csku='P-01-'.$categoryId;
		}elseif(strlen($pc)==1){
		$csku='P-0'.$pc.'-'.$categoryId;
		}else{
		$csku='P-'.$pc.'-'.$categoryId;
		}
		//$category1->setStoreId(1);
		$categorysku->setCategorySku(trim($csku));
		$categorysku->save();
	}
	//delete_parent('RED');
	// Default delete child category of parent 
	public function delete_parent($cname){
			$level=2;
			$_category = Mage::getResourceModel('catalog/category_collection')
			->addFieldToFilter('name', $cname)
			->addAttributeToFilter('level',$level)
			->getFirstItem();
			if($_category->getLevel()==2){
			 $category_id = $_category->getId(); //category id
			 $children = Mage::getModel('catalog/category')->load($category_id)->getChildrenCategories();
			 foreach ($children as $category){
			 $category = Mage::getModel('catalog/category')->load($category->getId());
			 $category->delete();
			}
			 Mage::getModel("catalog/category")->load($category_id)->delete();  
			}
	}
	// getCategoryIdbyName('GREEN')
	public function getCategoryIdbyName($cname)
	{
		$level=2;
		$_category = Mage::getResourceModel('catalog/category_collection')
			->addFieldToFilter('name', $cname)
			->addAttributeToFilter('level',$level)
			->getFirstItem();
			if($_category->getLevel()==2){
			 return $category_id = $_category->getId(); //category id
			}
	}

	// getCategoryIdbySku('P-02-36',1) //37 is category id
	public function getCategoryIdbySku($psku,$storeId=1){
		$cpsku=str_replace('P', 'C', $psku);
		$_category = Mage::getResourceModel('catalog/category_collection');
			//->addFieldToFilter('category_sku', array('like' => $psku.'%'))
			$_category->addFieldToFilter(array(
								  array('attribute' => 'category_sku', 'like' => $psku.'%'),
								  array('attribute' => 'category_sku', 'like' => $cpsku.'%')
								  ));
			$_category->setStore($storeId);
		 return $_category->getFirstItem()->getId();	
	}

	//getCategoryNamebySku('P-01-37') //37 is category id
	public function getCategoryNamebySku($psku,$storeId=1){
		$_category = Mage::getResourceModel('catalog/category_collection')
			->addFieldToFilter('category_sku', $psku)
			->setStore($storeId)
			->getFirstItem();
        $_cat=Mage::getModel('catalog/category')->load($_category->getId());			
		return $category_name = $_cat->getName(); //category name
		
	}

	//deleteCategorybySku('P-02-36',1)
	public function deleteCategorybySku($psku,$storeId){
		$_category = Mage::getResourceModel('catalog/category_collection')
			->addFieldToFilter('category_sku', $psku)
			->setStore($storeId)
			->getFirstItem();
		$category_id = $_category->getId(); //category id
		$category=Mage::getModel('catalog/category')->load($category_id);
		$category->delete();
	}
    //create_child('P-01','DARK_RED')
	public function create_child($psku,$child){
		$storeId=1;
		$parentId=$this->getCategoryIdbySku($psku,$storeId);
		if($parentId==''){
			echo 'Parent category does not exists';
			error_log('Parent category does not exists', 3, 'mylogfile.log');
			return 0;
		}
		$checkcat = Mage::getModel('catalog/category')->getCollection()
					->addFieldToFilter('name', $child)
					->addAttributeToFilter('parent_id',array('eq' => $parentId));
		
		if(count($checkcat)>=1){
			echo $child.' category name already exists';
			error_log($child.' category name already exists', 3, 'mylogfile.log');
			return 0;
		}
		
			
		$pcat = Mage::getModel('catalog/category')->getCollection()->addAttributeToSelect('category_sku')
					->addAttributeToFilter('parent_id',array('eq' => $parentId));
		$pcount=$pcat->getLastItem()->getCategorySku();
		
		$category = Mage::getModel('catalog/category');
		$category->setName($child);
		$category->setIsActive(1);
		$category->setDisplayMode('PRODUCTS');
		$category->setIsAnchor(1); //for active anchor
		//$category->setCategorySku($csku);//add sku
		$category->setStoreId($storeId);
		$parentCategory = Mage::getModel('catalog/category')->load($parentId);
		if(substr($parentCategory->getCategorySku(),0,1)=='C'){
			$pcsku=str_replace('C', 'P', $parentCategory->getCategorySku());
			$parentCategory->setCategorySku($pcsku);
			$parentCategory->save();
			
		}
		$category->setPath($parentCategory->getPath());
		$category->save();
		$categoryId=$category->getId();
		$this->addskutochildcategory($psku,$pcount,$categoryId,$storeId);
	}

	//addskutochildcategory('P-01','C-01_01-38',39,1) //39 create category id
	protected function addskutochildcategory($psku,$pcount,$categoryId,$storeId){
		$categorysku = Mage::getModel('catalog/category')->setStoreId($storeId)->load($categoryId);
		
		$psku=str_replace('P', 'C', $psku);
		$pcc=explode($psku.'_',$pcount);
		$pccc=explode('-',$pcc[1]);
		$pc=$pccc[0]+1;
		if($pcount==''){
		 $csku=$psku.'_01-'.$categoryId;
		}elseif(strlen($pc)==1){
		$csku=$psku.'_0'.$pc.'-'.$categoryId;
		}else{
		$csku=$psku.'_'.$pc.'-'.$categoryId;
		}
		$categorysku->setCategorySku(trim($csku));
		$categorysku->save();
	}

	//get parent level category child
	//get_children('RED')
	public function get_children($parent){
		$pid=$this->getCategoryIdbyName($parent);	
		$parentId=$pid;
		$_category = Mage::getModel('catalog/category')->load($parentId);    
		$_categories = $_category
						->getCollection()
						->addAttributeToSelect(array('name'))
						->addIdFilter($_category->getChildren());
		$child=array();
		foreach ($_categories as $_category){
		   $child[]=$_category->getName();
		}
		return $child;


	}
    //getTreeCategories(2) 
	public function getTreeCategories($parentId){
		$allCats = Mage::getModel('catalog/category')->getCollection()
					->addAttributeToSelect('*')
					->addAttributeToFilter('is_active','1')
					->addAttributeToFilter('include_in_menu','1')
					->addAttributeToFilter('parent_id',array('eq' => $parentId));

		$class = ($isChild) ? "sub-cat-list" : "cat-list";
		$html .= '<ul class="'.$class.'">';
		foreach ($allCats as $category) 
		{
			$html .= '<li>'.$category->getName()."";
			$subcats = $category->getChildren();
			if($subcats != ''){
				$html .= $this->getTreeCategories($category->getId(), true);
			}
			$html .= '</li>';
		}
		$html .= '</ul>';
		return $html;
	}
    //Delete all categoies which not have product
	public function deleteallcategories_noproduct($flag=1){
	if($flag==1 || $flag==true){
	$categoryCollection = Mage::getModel('catalog/category')->getCollection()->addFieldToFilter('level',  array('gteq' => 2));
	foreach($categoryCollection as $category) {
	   if ($category->getProductCount() === 0) {
		   $category->delete();
		}
	}
	}
	}
    //Delete all categories
	public function deleteallcategories($flag=1){
	if($flag==1 || $flag==true){
	$categoryCollection = Mage::getModel('catalog/category')->getCollection()->addFieldToFilter('level',  array('gteq' => 2));
	foreach($categoryCollection as $category) {
	      $category->delete();
	}
	}
	}
	
	//get  all categories by level
	public function getAllCategoryByLevel($level=2){
	$categoryCollection = Mage::getModel('catalog/category')->getCollection()->addFieldToFilter('level',  $level);
	$catids=array();
	foreach($categoryCollection as $category) {
	      $catids[]=$category->getId();
	}
	return $catids;
	}
	//get name categories by id
	public function getCategoryNameById($cId){
	$category = Mage::getModel('catalog/category')->load($cId);
	return $category->getName();
	}
}
 
